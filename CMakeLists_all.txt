cmake_minimum_required(VERSION 3.11.0)
SET(CMAKE_INSTALL_PREFIX "/usr")
project (maccess)

#Bring the headers into the project
include_directories(./maccess)
include_directories(./)
include_directories(./marginal)

#However, the file(GLOB...) allows for wildcard additions:
file(GLOB SOURCES_maccess "./maccess/*.c")
file(GLOB SOURCES_src "./marginal/*.c")

#For static libraries
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "../lib") 
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "../bin")

#Generate the static library from the sources
add_library(maccess STATIC ${SOURCES_maccess})
add_library(marginal STATIC ${SOURCES_src})

add_executable(e_create e_create.c)
add_executable(e_test e_test.c)
add_executable(e_load e_load.c)
add_executable(e_delete e_delete.c)
add_executable(e_print e_print.c)
add_executable(e_rebuild_data e_rebuild_data.c)
add_executable(e_rebuild_index e_rebuild_index.c)
add_executable(e_shmrm e_shmrm.c)
add_executable(btree_parameters btree_parameters.c)
add_executable(example example.c)
add_executable(calculate calculate.c)
add_executable(key key.c)

install(TARGETS maccess DESTINATION lib)
install(TARGETS example DESTINATION bin)
install(TARGETS calculate DESTINATION bin)

target_link_libraries(e_create maccess)
target_link_libraries(e_test maccess)
target_link_libraries(e_load maccess)
target_link_libraries(e_delete maccess)
target_link_libraries(e_print maccess)
target_link_libraries(e_rebuild_data maccess)
target_link_libraries(e_rebuild_index maccess)
target_link_libraries(e_shmrm maccess)
target_link_libraries(btree_parameters maccess -lm)
target_link_libraries(example maccess marginal -lncurses)
target_link_libraries(calculate maccess marginal -lncurses -lm)
target_link_libraries(key marginal -lncurses)
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror -pedantic -ggdb3") 
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror -pedantic -O3") 

