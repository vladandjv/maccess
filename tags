!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APP_LOGFILE	e1_load.c	12;"	d	file:
APP_LOGFILE	e1_print.c	12;"	d	file:
APP_LOGFILE	e1_rebuild.c	12;"	d	file:
APP_LOGFILE	e_load.c	12;"	d	file:
APP_LOGFILE	e_print.c	12;"	d	file:
APP_LOGFILE	e_rebuild.c	12;"	d	file:
APP_LOGFILE	example.c	10;"	d	file:
APP_LOGFILE	example1.c	13;"	d	file:
APP_LOGFILE	example1_shmrm.c	6;"	d	file:
APP_LOGFILE	example2/e2_auth_id_allowed_load.c	11;"	d	file:
APP_LOGFILE	example2/e2_auth_id_allowed_print.c	9;"	d	file:
APP_LOGFILE	example2/e2_auth_id_allowed_rebuild.c	9;"	d	file:
APP_LOGFILE	example2/e2_ip_address_load.c	11;"	d	file:
APP_LOGFILE	example2/e2_ip_address_print.c	9;"	d	file:
APP_LOGFILE	example2/e2_ip_address_rebuild.c	9;"	d	file:
APP_LOGFILE	example2/e2_origin_load.c	11;"	d	file:
APP_LOGFILE	example2/e2_origin_print.c	9;"	d	file:
APP_LOGFILE	example2/e2_origin_rebuild.c	9;"	d	file:
APP_LOGFILE	example2/e2_resource_load.c	11;"	d	file:
APP_LOGFILE	example2/e2_resource_print.c	9;"	d	file:
APP_LOGFILE	example2/e2_resource_rebuild.c	9;"	d	file:
APP_LOGFILE	example2/example2_shmrm.c	6;"	d	file:
APP_LOGFILE	example_shmrm.c	6;"	d	file:
AR	Makefile	/^AR = ar$/;"	m
ARFLAGS	Makefile	/^ARFLAGS = cr$/;"	m
AchMatPtr	screen.h	/^typedef char *AchMatPtr[MasAchRow];$/;"	t
Achoice	screen.c	/^Achoice (Headline, Matrica, Rows, Sirina, wUp, wLeft, Elements, LastChoice, SlovoI)$/;"	f
AddKey	maadd.c	/^AddKey (IdxF, IdxE, DataRecNum, ProcKey)$/;"	f
AddRec	maadd.c	/^AddRec (DatF, DatE, R, Buffer)$/;"	f
AllowDuplKeys	maccess.h	/^    Boolean AllowDuplKeys;$/;"	m	struct:IndexExt
ApproachSM	mamemory.c	/^ApproachSM (MemoryCode)$/;"	f
ArrItem	mainter.h	/^typedef struct TaItem ArrItem[PageSize];$/;"	t	typeref:struct:TaItem
Azuriran	screen.c	/^  Boolean Azuriran;$/;"	m	struct:TakeField	file:
BckwPageRef	mainter.h	/^    long long BckwPageRef;$/;"	m	struct:TaPage
Bool	defs.h	/^enum Bool {$/;"	g
Boolean	defs.h	/^typedef enum Bool Boolean;$/;"	t	typeref:enum:Bool
Buffer	maccess.c	/^union TaRecordBuffer Buffer;$/;"	v	typeref:union:TaRecordBuffer
C	maccess.h	/^    long long C;$/;"	m	struct:DataExt
CC	Makefile	/^CC= gcc $/;"	m
CC	example2/Makefile	/^CC= gcc $/;"	m
CFLAGS	Makefile	/^CFLAGS=  $(INCDIR) -Wall -Werror -pedantic -ggdb3 -fPIC -DPIC -z execstack -D_REENTRANT -fstack-protector $/;"	m
CFLAGS	example2/Makefile	/^CFLAGS=  $(INCDIR) -Wall -Werror -pedantic -ggdb3 -fPIC -DPIC -z execstack -D_REENTRANT -fstack-protector $/;"	m
CalculateHeight	btree_parameters.c	/^CalculateHeight (PgSize, MaxRecs)$/;"	f
ClearKey	maccess.c	/^ClearKey (IdxE)$/;"	f
CloseFile	maccess.c	/^CloseFile (DatF, DatE)$/;"	f
CloseIndex	maccess.c	/^CloseIndex (IdxF, IdxE)$/;"	f
Control	e1_load.c	/^Control ()$/;"	f
Control	e1_print.c	/^Control ()$/;"	f
Control	e1_rebuild.c	/^Control ()$/;"	f
Control	e_load.c	/^Control ()$/;"	f
Control	e_print.c	/^Control ()$/;"	f
Control	e_rebuild.c	/^Control ()$/;"	f
Control	example.c	/^Control ()$/;"	f
Control	example1.c	/^Control ()$/;"	f
Control	example2/e2_auth_id_allowed_load.c	/^Control ()$/;"	f
Control	example2/e2_auth_id_allowed_print.c	/^Control ()$/;"	f
Control	example2/e2_auth_id_allowed_rebuild.c	/^Control ()$/;"	f
Control	example2/e2_ip_address_load.c	/^Control ()$/;"	f
Control	example2/e2_ip_address_print.c	/^Control ()$/;"	f
Control	example2/e2_ip_address_rebuild.c	/^Control ()$/;"	f
Control	example2/e2_origin_load.c	/^Control ()$/;"	f
Control	example2/e2_origin_print.c	/^Control ()$/;"	f
Control	example2/e2_origin_rebuild.c	/^Control ()$/;"	f
Control	example2/e2_resource_load.c	/^Control ()$/;"	f
Control	example2/e2_resource_print.c	/^Control ()$/;"	f
Control	example2/e2_resource_rebuild.c	/^Control ()$/;"	f
CutString	maccess.c	/^CutString (ArrayOfSymbols, Length)$/;"	f
DB_Lock_Close	mashmlock.c	/^DB_Lock_Close (long long *retrna)$/;"	f
DB_Lock_Init	mashmlock.c	/^DB_Lock_Init (key_t shm_mem_code, size_t shm_mem_size)$/;"	f
DExt	e1_load.c	/^struct DataExt DExt;$/;"	v	typeref:struct:DataExt
DExt	e1_print.c	/^struct DataExt DExt;$/;"	v	typeref:struct:DataExt
DExt	e1_rebuild.c	/^struct DataExt DExt;$/;"	v	typeref:struct:DataExt
DExt	e_load.c	/^struct DataExt DExt;$/;"	v	typeref:struct:DataExt
DExt	e_print.c	/^struct DataExt DExt;$/;"	v	typeref:struct:DataExt
DExt	e_rebuild.c	/^struct DataExt DExt;$/;"	v	typeref:struct:DataExt
DExt	example.c	/^struct DataExt DExt;$/;"	v	typeref:struct:DataExt
DExt	example1.c	/^struct DataExt DExt;$/;"	v	typeref:struct:DataExt
DExt_auth_id_allowed	example2/example2.h	/^struct DataExt DExt_auth_id_allowed;$/;"	v	typeref:struct:DataExt
DExt_ip_address	example2/example2.h	/^struct DataExt DExt_ip_address;$/;"	v	typeref:struct:DataExt
DExt_origin	example2/example2.h	/^struct DataExt DExt_origin;$/;"	v	typeref:struct:DataExt
DExt_resource	example2/example2.h	/^struct DataExt DExt_resource;$/;"	v	typeref:struct:DataExt
DPtr	e1_load.c	/^DataFilePtr DPtr = NULL;$/;"	v
DPtr	e1_print.c	/^DataFilePtr DPtr = NULL;$/;"	v
DPtr	e1_rebuild.c	/^DataFilePtr DPtr = NULL;$/;"	v
DPtr	e_load.c	/^DataFilePtr DPtr = NULL;$/;"	v
DPtr	e_print.c	/^DataFilePtr DPtr = NULL;$/;"	v
DPtr	e_rebuild.c	/^DataFilePtr DPtr = NULL;$/;"	v
DPtr	example.c	/^DataFilePtr DPtr = NULL;$/;"	v
DPtr	example1.c	/^DataFilePtr DPtr = NULL;$/;"	v
DPtr_auth_id_allowed	example2/example2.h	/^DataFilePtr DPtr_auth_id_allowed;$/;"	v
DPtr_ip_address	example2/example2.h	/^DataFilePtr DPtr_ip_address;$/;"	v
DPtr_origin	example2/example2.h	/^DataFilePtr DPtr_origin;$/;"	v
DPtr_resource	example2/example2.h	/^DataFilePtr DPtr_resource;$/;"	v
DatFName	e1_load.c	/^FileName DatFName = "data1.dbc";$/;"	v
DatFName	e1_print.c	/^FileName DatFName = "data1.dbc";$/;"	v
DatFName	e1_rebuild.c	/^FileName DatFName = "data1.dbc";$/;"	v
DatFName	e_load.c	/^FileName DatFName = "data.dbc";$/;"	v
DatFName	e_print.c	/^FileName DatFName = "data.dbc";$/;"	v
DatFName	e_rebuild.c	/^FileName DatFName = "data.dbc";$/;"	v
DatFName	example.c	/^FileName DatFName = "data.dbc";$/;"	v
DatFName	example1.c	/^FileName DatFName = "data1.dbc";$/;"	v
DatFName	example2/e2_auth_id_allowed_load.c	/^FileName DatFName = "auth_id_allowed.dbc";$/;"	v
DatFName	example2/e2_auth_id_allowed_print.c	/^FileName DatFName = "auth_id_allowed.dbc";$/;"	v
DatFName	example2/e2_auth_id_allowed_rebuild.c	/^FileName DatFName = "auth_id_allowed.dbc";$/;"	v
DatFName	example2/e2_ip_address_load.c	/^FileName DatFName = "ip_address.dbc";$/;"	v
DatFName	example2/e2_ip_address_print.c	/^FileName DatFName = "ip_address.dbc";$/;"	v
DatFName	example2/e2_ip_address_rebuild.c	/^FileName DatFName = "ip_address.dbc";$/;"	v
DatFName	example2/e2_origin_load.c	/^FileName DatFName = "origin.dbc";$/;"	v
DatFName	example2/e2_origin_print.c	/^FileName DatFName = "origin.dbc";$/;"	v
DatFName	example2/e2_origin_rebuild.c	/^FileName DatFName = "origin.dbc";$/;"	v
DatFName	example2/e2_resource_load.c	/^FileName DatFName = "resource.dbc";$/;"	v
DatFName	example2/e2_resource_print.c	/^FileName DatFName = "resource.dbc";$/;"	v
DatFName	example2/e2_resource_rebuild.c	/^FileName DatFName = "resource.dbc";$/;"	v
DatFName1	e1_load.c	/^FileName DatFName1 = "data1.tmp";$/;"	v
DatFName1	e1_print.c	/^FileName DatFName1 = "data1.tmp";$/;"	v
DatFName1	e1_rebuild.c	/^FileName DatFName1 = "data1.tmp";$/;"	v
DatFName1	e_rebuild.c	/^FileName DatFName1 = "data.tmp";$/;"	v
DatFName1	example.c	/^FileName DatFName1 = "data.tmp";$/;"	v
DatFName1	example1.c	/^FileName DatFName1 = "data1.tmp";$/;"	v
DatFName1	example2/e2_auth_id_allowed_load.c	/^FileName DatFName1 = "auth_id_allowed.tmp";$/;"	v
DatFName1	example2/e2_auth_id_allowed_print.c	/^FileName DatFName1 = "auth_id_allowed.tmp";$/;"	v
DatFName1	example2/e2_auth_id_allowed_rebuild.c	/^FileName DatFName1 = "auth_id_allowed.tmp";$/;"	v
DatFName1	example2/e2_ip_address_load.c	/^FileName DatFName1 = "ip_address.tmp";$/;"	v
DatFName1	example2/e2_ip_address_print.c	/^FileName DatFName1 = "ip_address.tmp";$/;"	v
DatFName1	example2/e2_ip_address_rebuild.c	/^FileName DatFName1 = "ip_address.tmp";$/;"	v
DatFName1	example2/e2_origin_load.c	/^FileName DatFName1 = "origin.tmp";$/;"	v
DatFName1	example2/e2_origin_print.c	/^FileName DatFName1 = "origin.tmp";$/;"	v
DatFName1	example2/e2_origin_rebuild.c	/^FileName DatFName1 = "origin.tmp";$/;"	v
DatFName1	example2/e2_resource_load.c	/^FileName DatFName1 = "resource.tmp";$/;"	v
DatFName1	example2/e2_resource_print.c	/^FileName DatFName1 = "resource.tmp";$/;"	v
DatFName1	example2/e2_resource_rebuild.c	/^FileName DatFName1 = "resource.tmp";$/;"	v
DataE	maccess.h	/^    struct DataExt DataE;$/;"	m	struct:IndexExt	typeref:struct:IndexExt::DataExt
DataExt	maccess.h	/^struct DataExt {$/;"	s
DataFile	maccess.h	/^struct DataFile {$/;"	s
DataFilePtr	maccess.h	/^typedef struct DataFile *DataFilePtr;$/;"	t	typeref:struct:DataFile
DataRef	mainter.h	/^    long long DataRef;$/;"	m	struct:TaItem
Datum	screen.c	/^  Boolean Datum;$/;"	m	struct:TakeField	file:
DelA	madelete.c	/^DelA (PrPgRef2, PrPgRef, IdxF, IdxE, DataRecNum, ProcKey)$/;"	f
DelB	madelete.c	/^DelB (PrPgRef, IdxF, IdxE, DataRecNum, ProcKey, RBr)$/;"	f
DelRecord	madelete.c	/^DelRecord (DatF, R)$/;"	f
Delete	example.c	/^Delete ()$/;"	f
Delete	example1.c	/^Delete ()$/;"	f
DeleteKey	madelete.c	/^DeleteKey (IdxF, IdxE, DataRecNum, ProcKey)$/;"	f
DeleteRec	madelete.c	/^DeleteRec (DatF, DatE, R)$/;"	f
Delete_Screen	scrdefs.h	55;"	d
Deleted	example.h	/^    long long Deleted;$/;"	m	struct:Record
Deleted	example1.h	/^    long long Deleted;$/;"	m	struct:Record
Deleted	example2/example2.h	/^    long long Deleted;$/;"	m	struct:Record_auth_id_allowed
Deleted	example2/example2.h	/^    long long Deleted;$/;"	m	struct:Record_ip_address
Deleted	example2/example2.h	/^    long long Deleted;$/;"	m	struct:Record_origin
Deleted	example2/example2.h	/^    long long Deleted;$/;"	m	struct:Record_resource
Deleting	example.c	/^Deleting ()$/;"	f
Destroy_SHM	mamemory.c	/^Destroy_SHM (key_t shm_mem_code, size_t shm_mem_size)$/;"	f
Direct_Exit	screen.c	/^Boolean Direct_Exit = F;$/;"	v
Duplicates	maccess.h	26;"	d
ErrAtSM	maccerr.h	26;"	d
ErrCloseFile	maccerr.h	13;"	d
ErrDtSM	maccerr.h	27;"	d
ErrFlushFile	maccerr.h	14;"	d
ErrGetRec	maccerr.h	18;"	d
ErrGetSM	maccerr.h	25;"	d
ErrLock1	maccerr.h	21;"	d
ErrLock2	maccerr.h	22;"	d
ErrMakeFile	maccerr.h	10;"	d
ErrMakeIndex	maccerr.h	15;"	d
ErrMemoryCode	maccerr.h	29;"	d
ErrOpenFile	maccerr.h	12;"	d
ErrOpenIndex	maccerr.h	16;"	d
ErrPutRec	maccerr.h	19;"	d
ErrReadHeader	maccerr.h	11;"	d
ErrReturnPage	maccerr.h	17;"	d
ErrRmSM	maccerr.h	28;"	d
ErrUnLock1	maccerr.h	23;"	d
ErrUnLock2	maccerr.h	24;"	d
ErrWriteRec	maccerr.h	20;"	d
F	defs.h	/^    F, T$/;"	e	enum:Bool
FieldPtr	screen.c	/^  GetStr *FieldPtr;$/;"	m	struct:TakeField	file:
FileHeaderSize	btree_parameters.c	20;"	d	file:
FileHeaderSize	btree_parameters.c	26;"	d	file:
FileHeaderSize	maccess.h	18;"	d
FileLen	maccess.c	/^FileLen (DatF)$/;"	f
FileName	maccess.h	/^typedef char FileName[MAX_STRING_LENGTH];$/;"	t
FileNumber	maccess.h	/^    long long FileNumber;$/;"	m	struct:DataExt
FileNumber	maccess.h	/^    long long FileNumber;$/;"	m	struct:DataFile
FileTitle	maccess.h	/^    FileName FileTitle;$/;"	m	struct:DataExt
Find	example.c	/^Find ()$/;"	f
Find	example1.c	/^Find ()$/;"	f
FindKey	maccess.c	/^FindKey (IdxF, IdxE, DataRecNum, ProcKey)$/;"	f
FindYourPlace	mamemory.c	/^FindYourPlace (DatF, MemNum, FileNum)$/;"	f
FirstFree	maccess.h	/^    long long FirstFree;$/;"	m	struct:HederFajla
FirstevKey_pressed	screen.c	/^  Boolean FirstevKey_pressed;$/;"	m	struct:TakeField	file:
FlushFile	maflush.c	/^FlushFile (DatF, DatE)$/;"	f
FlushIndex	maflush.c	/^FlushIndex (IdxF, IdxE)$/;"	f
Frame	scrdefs.h	56;"	d
FunPtr	screen.c	/^  Boolean (*FunPtr)();$/;"	m	struct:TakeField	file:
GetDatum	screen.c	/^void GetDatum$/;"	f
GetField	screen.c	/^void GetField$/;"	f
GetRec	maccess.c	/^GetRec (DatF, DatE, R, Buffer)$/;"	f
GetSquare	screen.c	/^GetSquare (RowN, KolN, InputField, VelPolja, RowLength)$/;"	f
GetStr	screen.c	/^typedef char GetStr[MaxGetLen];$/;"	t	file:
H	maccess.h	/^    long long H;$/;"	m	struct:DataExt
HadBits	maccess.c	/^long long HadBits; \/* It used to communicate between TaGetPage as one side $/;"	v
HasBits	maccess.h	/^    long long HasBits;$/;"	m	struct:TaSearchStep
HasMemories	maccess.h	27;"	d
Headline	screen.c	/^  HeadlineStr Headline;$/;"	m	struct:TakeField	file:
HeadlineStr	screen.c	/^typedef char HeadlineStr[MaxHeadlineLen];$/;"	t	file:
Heder	maccess.h	/^    struct HederFajla Heder;$/;"	m	struct:DataFile	typeref:struct:DataFile::HederFajla
HederFajla	maccess.h	/^struct HederFajla {$/;"	s
Help	calculate.c	/^Help (Headline)$/;"	f
Help	example.c	/^Help (Headline)$/;"	f
Help	example1.c	/^Help (char *Headline)$/;"	f
Help1	calculate.c	/^Help1 ()$/;"	f
HowMuchW	screen.c	/^int StartPositionW, HowMuchW;$/;"	v
I	mainter.h	/^    long long I;$/;"	m	union:TaRecordBuffer
IExt	e1_load.c	/^struct IndexExt IExt;$/;"	v	typeref:struct:IndexExt
IExt	e1_print.c	/^struct IndexExt IExt;$/;"	v	typeref:struct:IndexExt
IExt	e1_rebuild.c	/^struct IndexExt IExt;$/;"	v	typeref:struct:IndexExt
IExt	e_load.c	/^struct IndexExt IExt;$/;"	v	typeref:struct:IndexExt
IExt	e_print.c	/^struct IndexExt IExt;$/;"	v	typeref:struct:IndexExt
IExt	e_rebuild.c	/^struct IndexExt IExt;$/;"	v	typeref:struct:IndexExt
IExt	example.c	/^struct IndexExt IExt;$/;"	v	typeref:struct:IndexExt
IExt	example1.c	/^struct IndexExt IExt;$/;"	v	typeref:struct:IndexExt
IExt_auth_id	e1_load.c	/^struct IndexExt IExt_auth_id;$/;"	v	typeref:struct:IndexExt
IExt_auth_id	e1_print.c	/^struct IndexExt IExt_auth_id;$/;"	v	typeref:struct:IndexExt
IExt_auth_id	e1_rebuild.c	/^struct IndexExt IExt_auth_id;$/;"	v	typeref:struct:IndexExt
IExt_auth_id	example1.c	/^struct IndexExt IExt_auth_id;$/;"	v	typeref:struct:IndexExt
IExt_auth_id_allowed_auth_id	example2/example2.h	/^struct IndexExt IExt_auth_id_allowed_auth_id;$/;"	v	typeref:struct:IndexExt
IExt_auth_id_allowed_record_id	example2/example2.h	/^struct IndexExt IExt_auth_id_allowed_record_id;$/;"	v	typeref:struct:IndexExt
IExt_client_id	e1_load.c	/^struct IndexExt IExt_client_id;$/;"	v	typeref:struct:IndexExt
IExt_client_id	e1_print.c	/^struct IndexExt IExt_client_id;$/;"	v	typeref:struct:IndexExt
IExt_client_id	e1_rebuild.c	/^struct IndexExt IExt_client_id;$/;"	v	typeref:struct:IndexExt
IExt_client_id	example1.c	/^struct IndexExt IExt_client_id;$/;"	v	typeref:struct:IndexExt
IExt_group_id	e1_load.c	/^struct IndexExt IExt_group_id;$/;"	v	typeref:struct:IndexExt
IExt_group_id	e1_print.c	/^struct IndexExt IExt_group_id;$/;"	v	typeref:struct:IndexExt
IExt_group_id	e1_rebuild.c	/^struct IndexExt IExt_group_id;$/;"	v	typeref:struct:IndexExt
IExt_group_id	example1.c	/^struct IndexExt IExt_group_id;$/;"	v	typeref:struct:IndexExt
IExt_ip_address_allowed	example2/example2.h	/^struct IndexExt IExt_ip_address_allowed;$/;"	v	typeref:struct:IndexExt
IExt_ip_address_ip4_add	example2/example2.h	/^struct IndexExt IExt_ip_address_ip4_add;$/;"	v	typeref:struct:IndexExt
IExt_ip_address_record_id	example2/example2.h	/^struct IndexExt IExt_ip_address_record_id;$/;"	v	typeref:struct:IndexExt
IExt_origin_origin_name	example2/example2.h	/^struct IndexExt IExt_origin_origin_name;$/;"	v	typeref:struct:IndexExt
IExt_origin_record_id	example2/example2.h	/^struct IndexExt IExt_origin_record_id;$/;"	v	typeref:struct:IndexExt
IExt_resource_id	e1_load.c	/^struct IndexExt IExt_resource_id;$/;"	v	typeref:struct:IndexExt
IExt_resource_id	e1_print.c	/^struct IndexExt IExt_resource_id;$/;"	v	typeref:struct:IndexExt
IExt_resource_id	e1_rebuild.c	/^struct IndexExt IExt_resource_id;$/;"	v	typeref:struct:IndexExt
IExt_resource_id	example1.c	/^struct IndexExt IExt_resource_id;$/;"	v	typeref:struct:IndexExt
IExt_resource_record_id	example2/example2.h	/^struct IndexExt IExt_resource_record_id;$/;"	v	typeref:struct:IndexExt
IExt_resource_resource_id	example2/example2.h	/^struct IndexExt IExt_resource_resource_id;$/;"	v	typeref:struct:IndexExt
IExt_status	e1_load.c	/^struct IndexExt IExt_status;$/;"	v	typeref:struct:IndexExt
IExt_status	e1_print.c	/^struct IndexExt IExt_status;$/;"	v	typeref:struct:IndexExt
IExt_status	e1_rebuild.c	/^struct IndexExt IExt_status;$/;"	v	typeref:struct:IndexExt
IExt_status	example1.c	/^struct IndexExt IExt_status;$/;"	v	typeref:struct:IndexExt
INCDIR	Makefile	/^INCDIR = -I. -I..\/toolset_gc\/include\/$/;"	m
INCDIR	example2/Makefile	/^INCDIR = -I. -I..\/ -I..\/..\/toolset_gc\/include\/$/;"	m
IOStatus	maccess.c	/^long long IOStatus = -1;$/;"	v
IPtr	check.c	/^DataFilePtr IPtr = NULL;$/;"	v
IPtr	e_load.c	/^DataFilePtr IPtr = NULL;$/;"	v
IPtr	e_print.c	/^DataFilePtr IPtr = NULL;$/;"	v
IPtr	e_rebuild.c	/^DataFilePtr IPtr = NULL;$/;"	v
IPtr_auth_id	e1_load.c	/^DataFilePtr IPtr_auth_id = NULL;$/;"	v
IPtr_auth_id	e1_print.c	/^DataFilePtr IPtr_auth_id = NULL;$/;"	v
IPtr_auth_id	e1_rebuild.c	/^DataFilePtr IPtr_auth_id = NULL;$/;"	v
IPtr_auth_id	example1.c	/^DataFilePtr IPtr_auth_id = NULL;$/;"	v
IPtr_auth_id_allowed_auth_id	example2/example2.h	/^DataFilePtr IPtr_auth_id_allowed_auth_id;$/;"	v
IPtr_auth_id_allowed_record_id	example2/example2.h	/^DataFilePtr IPtr_auth_id_allowed_record_id;$/;"	v
IPtr_client_id	e1_load.c	/^DataFilePtr IPtr_client_id = NULL;$/;"	v
IPtr_client_id	e1_print.c	/^DataFilePtr IPtr_client_id = NULL;$/;"	v
IPtr_client_id	e1_rebuild.c	/^DataFilePtr IPtr_client_id = NULL;$/;"	v
IPtr_client_id	example1.c	/^DataFilePtr IPtr_client_id = NULL;$/;"	v
IPtr_group_id	e1_load.c	/^DataFilePtr IPtr_group_id = NULL;$/;"	v
IPtr_group_id	e1_print.c	/^DataFilePtr IPtr_group_id = NULL;$/;"	v
IPtr_group_id	e1_rebuild.c	/^DataFilePtr IPtr_group_id = NULL;$/;"	v
IPtr_group_id	example1.c	/^DataFilePtr IPtr_group_id = NULL;$/;"	v
IPtr_ip_address_allowed	example2/example2.h	/^DataFilePtr IPtr_ip_address_allowed;$/;"	v
IPtr_ip_address_ip4_add	example2/example2.h	/^DataFilePtr IPtr_ip_address_ip4_add;$/;"	v
IPtr_ip_address_record_id	example2/example2.h	/^DataFilePtr IPtr_ip_address_record_id;$/;"	v
IPtr_origin_origin_name	example2/example2.h	/^DataFilePtr IPtr_origin_origin_name;$/;"	v
IPtr_origin_record_id	example2/example2.h	/^DataFilePtr IPtr_origin_record_id;$/;"	v
IPtr_resource_id	e1_load.c	/^DataFilePtr IPtr_resource_id = NULL;$/;"	v
IPtr_resource_id	e1_print.c	/^DataFilePtr IPtr_resource_id = NULL;$/;"	v
IPtr_resource_id	e1_rebuild.c	/^DataFilePtr IPtr_resource_id = NULL;$/;"	v
IPtr_resource_id	example1.c	/^DataFilePtr IPtr_resource_id = NULL;$/;"	v
IPtr_resource_record_id	example2/example2.h	/^DataFilePtr IPtr_resource_record_id;$/;"	v
IPtr_resource_resource_id	example2/example2.h	/^DataFilePtr IPtr_resource_resource_id;$/;"	v
IPtr_status	e1_load.c	/^DataFilePtr IPtr_status = NULL;$/;"	v
IPtr_status	e1_print.c	/^DataFilePtr IPtr_status = NULL;$/;"	v
IPtr_status	e1_rebuild.c	/^DataFilePtr IPtr_status = NULL;$/;"	v
IPtr_status	example1.c	/^DataFilePtr IPtr_status = NULL;$/;"	v
InFieldPtr	screen.c	/^struct TakeField *InFieldPtr[MaxGet];$/;"	v	typeref:struct:TakeField
IndexEPtr	mainter.h	/^    IndexExtPtr IndexEPtr;$/;"	m	struct:TaStackRec
IndexExt	maccess.h	/^struct IndexExt {$/;"	s
IndexExtPtr	maccess.h	/^typedef struct IndexExt *IndexExtPtr;$/;"	t	typeref:struct:IndexExt
IndexFName	e_load.c	/^FileName IndexFName = "data.cdx";$/;"	v
IndexFName	e_print.c	/^FileName IndexFName = "data.cdx";$/;"	v
IndexFName	e_rebuild.c	/^FileName IndexFName = "data.cdx";$/;"	v
IndexFName	example.c	/^FileName IndexFName = "data.cdx";$/;"	v
IndexFName0	e1_load.c	/^FileName IndexFName0 = "client_id.cdx";$/;"	v
IndexFName0	e1_print.c	/^FileName IndexFName0 = "client_id.cdx";$/;"	v
IndexFName0	e1_rebuild.c	/^FileName IndexFName0 = "client_id.cdx";$/;"	v
IndexFName0	example1.c	/^FileName IndexFName0 = "client_id.cdx";$/;"	v
IndexFName0	example2/e2_auth_id_allowed_load.c	/^FileName IndexFName0 = "auth_id_allowed_record_id.cdx";$/;"	v
IndexFName0	example2/e2_auth_id_allowed_print.c	/^FileName IndexFName0 = "auth_id_allowed_record_id.cdx";$/;"	v
IndexFName0	example2/e2_auth_id_allowed_rebuild.c	/^FileName IndexFName0 = "auth_id_allowed_record_id.cdx";$/;"	v
IndexFName0	example2/e2_ip_address_load.c	/^FileName IndexFName0 = "ip_address_record_id.cdx";$/;"	v
IndexFName0	example2/e2_ip_address_print.c	/^FileName IndexFName0 = "ip_address_record_id.cdx";$/;"	v
IndexFName0	example2/e2_ip_address_rebuild.c	/^FileName IndexFName0 = "ip_address_record_id.cdx";$/;"	v
IndexFName0	example2/e2_origin_load.c	/^FileName IndexFName0 = "origin_record_id.cdx";$/;"	v
IndexFName0	example2/e2_origin_print.c	/^FileName IndexFName0 = "origin_record_id.cdx";$/;"	v
IndexFName0	example2/e2_origin_rebuild.c	/^FileName IndexFName0 = "origin_record_id.cdx";$/;"	v
IndexFName0	example2/e2_resource_load.c	/^FileName IndexFName0 = "resource_record_id.cdx";$/;"	v
IndexFName0	example2/e2_resource_print.c	/^FileName IndexFName0 = "resource_record_id.cdx";$/;"	v
IndexFName0	example2/e2_resource_rebuild.c	/^FileName IndexFName0 = "resource_record_id.cdx";$/;"	v
IndexFName1	e1_load.c	/^FileName IndexFName1 = "group_id.cdx";$/;"	v
IndexFName1	e1_print.c	/^FileName IndexFName1 = "group_id.cdx";$/;"	v
IndexFName1	e1_rebuild.c	/^FileName IndexFName1 = "group_id.cdx";$/;"	v
IndexFName1	example1.c	/^FileName IndexFName1 = "group_id.cdx";$/;"	v
IndexFName1	example2/e2_auth_id_allowed_load.c	/^FileName IndexFName1 = "auth_id_allowed_auth_id.cdx";$/;"	v
IndexFName1	example2/e2_auth_id_allowed_print.c	/^FileName IndexFName1 = "auth_id_allowed_auth_id.cdx";$/;"	v
IndexFName1	example2/e2_auth_id_allowed_rebuild.c	/^FileName IndexFName1 = "auth_id_allowed_auth_id.cdx";$/;"	v
IndexFName1	example2/e2_ip_address_load.c	/^FileName IndexFName1 = "ip_address_ip4_add.cdx";$/;"	v
IndexFName1	example2/e2_ip_address_print.c	/^FileName IndexFName1 = "ip_address_ip4_add.cdx";$/;"	v
IndexFName1	example2/e2_ip_address_rebuild.c	/^FileName IndexFName1 = "ip_address_ip4_add.cdx";$/;"	v
IndexFName1	example2/e2_origin_load.c	/^FileName IndexFName1 = "origin_origin_name.cdx";$/;"	v
IndexFName1	example2/e2_origin_print.c	/^FileName IndexFName1 = "origin_origin_name.cdx";$/;"	v
IndexFName1	example2/e2_origin_rebuild.c	/^FileName IndexFName1 = "origin_origin_name.cdx";$/;"	v
IndexFName1	example2/e2_resource_load.c	/^FileName IndexFName1 = "resource_resource_id.cdx";$/;"	v
IndexFName1	example2/e2_resource_print.c	/^FileName IndexFName1 = "resource_resource_id.cdx";$/;"	v
IndexFName1	example2/e2_resource_rebuild.c	/^FileName IndexFName1 = "resource_resource_id.cdx";$/;"	v
IndexFName2	e1_load.c	/^FileName IndexFName2 = "resource_id.cdx";$/;"	v
IndexFName2	e1_print.c	/^FileName IndexFName2 = "resource_id.cdx";$/;"	v
IndexFName2	e1_rebuild.c	/^FileName IndexFName2 = "resource_id.cdx";$/;"	v
IndexFName2	example1.c	/^FileName IndexFName2 = "resource_id.cdx";$/;"	v
IndexFName2	example2/e2_ip_address_load.c	/^FileName IndexFName2 = "ip_address_ip_allowed.cdx";$/;"	v
IndexFName2	example2/e2_ip_address_print.c	/^FileName IndexFName2 = "ip_address_ip_allowed.cdx";$/;"	v
IndexFName2	example2/e2_ip_address_rebuild.c	/^FileName IndexFName2 = "ip_address_ip_allowed.cdx";$/;"	v
IndexFName3	e1_load.c	/^FileName IndexFName3 = "auth_id.cdx";$/;"	v
IndexFName3	e1_print.c	/^FileName IndexFName3 = "auth_id.cdx";$/;"	v
IndexFName3	e1_rebuild.c	/^FileName IndexFName3 = "auth_id.cdx";$/;"	v
IndexFName3	example1.c	/^FileName IndexFName3 = "auth_id.cdx";$/;"	v
IndexFName4	e1_load.c	/^FileName IndexFName4 = "status.cdx";$/;"	v
IndexFName4	e1_print.c	/^FileName IndexFName4 = "status.cdx";$/;"	v
IndexFName4	e1_rebuild.c	/^FileName IndexFName4 = "status.cdx";$/;"	v
IndexFName4	example1.c	/^FileName IndexFName4 = "status.cdx";$/;"	v
IndexFPtr	mainter.h	/^    DataFilePtr IndexFPtr;$/;"	m	struct:TaStackRec
InitAccess	mamemory.c	/^InitAccess (MemoryNumber, MemoryCode)$/;"	f
InitEkran	key.c	/^InitEkran ()$/;"	f
InitEkran	screen.c	/^InitEkran ()$/;"	f
InitPages	mamemory.c	/^InitPages (MemNum, MemoryCode)$/;"	f
InputField	screen.c	/^  GetStr InputField;$/;"	m	struct:TakeField	file:
Insert	maadd.c	/^Insert (PrPgRef1, IdxF, IdxE, RBr)$/;"	f
InsertMod	screen.c	/^int InsertMod;$/;"	v
Inserting	example.c	/^Inserting ()$/;"	f
Inserting	example1.c	/^Inserting ()$/;"	f
Int1	maccess.h	/^    long long Int1;$/;"	m	struct:HederFajla
ItemArrIndex	maccess.h	/^    long long ItemArrIndex;$/;"	m	struct:TaSearchStep
ItemArray	mainter.h	/^    ArrItem ItemArray;$/;"	m	struct:TaPage
ItemOverhead	btree_parameters.c	21;"	d	file:
ItemOverhead	btree_parameters.c	27;"	d	file:
ItemOverhead	maccess.h	20;"	d
ItemSize	maccess.h	/^    long long ItemSize;$/;"	m	struct:HederFajla
ItemsOnPage	mainter.h	/^    long long ItemsOnPage;$/;"	m	struct:TaPage
Key	example.h	/^    char Key[11];$/;"	m	struct:Record
Key	mainter.h	/^    TaKeyStr Key;$/;"	m	struct:TaItem
KeyL	maccess.h	/^    unsigned long long KeyL; \/* byte type *\/$/;"	m	struct:DataFile
KeyLen	e_load.c	/^unsigned long long KeyLen = 11; \/* Should be key lenght + 1 *\/$/;"	v
KeyLen	e_print.c	/^unsigned long long KeyLen = 11; \/* Should be key lenght + 1 *\/$/;"	v
KeyLen	e_rebuild.c	/^unsigned long long KeyLen = 11; \/* Should be key lenght + 1 *\/$/;"	v
KeyLen	example.c	/^unsigned long long KeyLen = 11; \/* Should be key lenght + 1 *\/$/;"	v
KeySizeMismatch	maccerr.h	9;"	d
KeyTooLarge	maccerr.h	7;"	d
Key_pressed	scrkey.c	/^Key_pressed ()$/;"	f
KolG	screen.c	/^  int KolG;$/;"	m	struct:TakeField	file:
KolN	screen.c	/^  int KolN;$/;"	m	struct:TakeField	file:
LIB1	Makefile	/^LIB1 =  maccess.a $/;"	m
LIB1	example2/Makefile	/^LIB1 =  maccess.a $/;"	m
LIB2	Makefile	/^LIB2 =  scrlib.a $/;"	m
LIB3	Makefile	/^LIB3 = vlib.a$/;"	m
LOCK_SHM_MEM_CODE	conf_lib.h	22;"	d
LOCK_SHM_MEM_CODE_1	conf_lib.h	24;"	d
LOCK_SHM_MEM_CODE_2	conf_lib.h	26;"	d
LOCK_SHM_MEM_SIZE	conf_lib.h	16;"	d
LastKey	maccess.h	/^    TaKeyStr LastKey;$/;"	m	struct:IndexExt
LastRecord	maccess.h	/^    long long LastRecord;$/;"	m	struct:IndexExt
LeaveSM	mamemory.c	/^LeaveSM (retrna)$/;"	f
Line	scrdefs.h	57;"	d
ListPtr	screen.c	/^  Boolean (*ListPtr)();$/;"	m	struct:TakeField	file:
Loading	e1_load.c	/^Loading ()$/;"	f
Loading	e_load.c	/^Loading ()$/;"	f
Loading	example.c	/^Loading ()$/;"	f
Loading	example1.c	/^Loading ()$/;"	f
Loading	example2/e2_auth_id_allowed_load.c	/^Loading ()$/;"	f
Loading	example2/e2_ip_address_load.c	/^Loading ()$/;"	f
Loading	example2/e2_origin_load.c	/^Loading ()$/;"	f
Loading	example2/e2_resource_load.c	/^Loading ()$/;"	f
Lock	e1_load.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	e1_print.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	e_load.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	e_print.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example1.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example2/e2_auth_id_allowed_load.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example2/e2_auth_id_allowed_print.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example2/e2_ip_address_load.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example2/e2_ip_address_print.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example2/e2_origin_load.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example2/e2_origin_print.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example2/e2_resource_load.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Lock	example2/e2_resource_print.c	/^long long *Lock; \/* locks the shared memory segment*\/$/;"	v
Logfile	log.c	/^static char * Logfile = NULL;$/;"	v	file:
Look	screen.c	/^Look ()$/;"	f
M	maccess.h	/^    long long M;$/;"	m	struct:DataFile
MACCESS_SHM_MEM_CODE	conf_lib.h	23;"	d
MACCESS_SHM_MEM_CODE_1	conf_lib.h	25;"	d
MACCESS_SHM_MEM_CODE_2	conf_lib.h	27;"	d
MACCESS_SHM_MEM_SIZE	conf_lib.h	20;"	d
MAX_STRING_LENGTH	defs.h	18;"	d
M_TERMINFO	key.c	5;"	d	file:
MakeFile	mamake.c	/^MakeFile (DatF, DatE, FName, RecLen, MemNum, FileNum)$/;"	f
MakeIndex	mamake.c	/^MakeIndex (IdxF, IdxE, FName, KeyLen, S, MemNum, FileNum)$/;"	f
MasAchRow	screen.h	13;"	d
MaxDataRecSize	maccess.h	23;"	d
MaxGet	screen.c	10;"	d	file:
MaxGetLen	screen.c	12;"	d	file:
MaxHeadlineLen	screen.c	13;"	d	file:
MaxHeight	btree_parameters.c	24;"	d	file:
MaxHeight	maccess.h	17;"	d
MaxKeyLen	maccess.h	13;"	d
MaxLook	screen.c	11;"	d	file:
MaxMaxHeight	btree_parameters.c	/^int MaxMaxHeight; \/* Needed for as result for CalculateHeight() *\/$/;"	v
MaxMaxHeight	calculate.c	/^int MaxMaxHeight;$/;"	v
MemId	mamemory.c	/^long long MemId[HasMemories];$/;"	v
MemSh	mamemory.c	/^char *MemSh[HasMemories];$/;"	v
MinDataRecSize	maccess.h	19;"	d
MyRecord	e1_load.c	/^struct Record MyRecord;$/;"	v	typeref:struct:Record
MyRecord	e1_print.c	/^struct Record MyRecord;$/;"	v	typeref:struct:Record
MyRecord	e1_rebuild.c	/^struct Record MyRecord;$/;"	v	typeref:struct:Record
MyRecord	example1.c	/^struct Record MyRecord;$/;"	v	typeref:struct:Record
Name	example.h	/^    char Name[21];$/;"	m	struct:Record
NewRec	maccess.c	/^NewRec (DatF, R)$/;"	f
Next	e1_print.c	/^Next ()$/;"	f
Next	e_print.c	/^Next ()$/;"	f
Next	example.c	/^Next ()$/;"	f
Next	example1.c	/^Next ()$/;"	f
Next	example2/e2_auth_id_allowed_print.c	/^Next ()$/;"	f
Next	example2/e2_ip_address_print.c	/^Next ()$/;"	f
Next	example2/e2_origin_print.c	/^Next ()$/;"	f
Next	example2/e2_resource_print.c	/^Next ()$/;"	f
NextKey	maccess.c	/^NextKey (IdxF, IdxE, DataRecNum, ProcKey)$/;"	f
NoDuplicates	maccess.h	25;"	d
NumRec	maccess.h	/^    long long NumRec;$/;"	m	struct:HederFajla
NumberFree	maccess.h	/^    long long NumberFree;$/;"	m	struct:HederFajla
OBJS1	Makefile	/^OBJS1 = maccess.o maflush.o mamake.o madelete.o maadd.o \\$/;"	m
OBJS2	Makefile	/^OBJS2 = scrline.o scrcheck.o scrframe.o scrkey.o scrshowsymbols.o screen.o $/;"	m
OBJS3	Makefile	/^OBJS3 =  time.o date.o string.o $/;"	m
OKAY	maccess.c	/^Boolean OKAY = T;$/;"	v
OpenFile	maccess.c	/^OpenFile (DatF, DatE, FName, RecLen, MemNum, FileNum)$/;"	f
OpenIndex	maccess.c	/^OpenIndex (IdxF, IdxE, FName, KeyLen, S, MemNum, FileNum)$/;"	f
Order	btree_parameters.c	23;"	d	file:
Order	maccess.h	16;"	d
OurRecord	e_load.c	/^struct Record OurRecord;$/;"	v	typeref:struct:Record
OurRecord	e_print.c	/^struct Record OurRecord;$/;"	v	typeref:struct:Record
OurRecord	e_rebuild.c	/^struct Record OurRecord;$/;"	v	typeref:struct:Record
OurRecord	example.c	/^struct Record OurRecord;$/;"	v	typeref:struct:Record
PAIR1	scrdefs.h	43;"	d
PAIR2	scrdefs.h	44;"	d
PAIR3	scrdefs.h	45;"	d
PAIR4	scrdefs.h	46;"	d
PAIR5	scrdefs.h	47;"	d
PAIR6	scrdefs.h	48;"	d
PP	maccess.h	/^    long long PP;$/;"	m	struct:IndexExt
PagPtrAB	madelete.c	/^TaPagePtr PagPtrAB; \/* communication between DelB i DelA *\/$/;"	v
Page	mainter.h	/^    struct TaPage Page;$/;"	m	struct:TaStackRec	typeref:struct:TaStackRec::TaPage
Page	mainter.h	/^    struct TaStackRec Page;$/;"	m	union:TaRecordBuffer	typeref:struct:TaRecordBuffer::TaStackRec
PageBlock	maccess.c	/^typedef char PageBlock[INT_MAX];$/;"	t	file:
PageOverhead	btree_parameters.c	22;"	d	file:
PageOverhead	btree_parameters.c	28;"	d	file:
PageOverhead	maccess.h	21;"	d
PagePtr1	maadd.c	/^TaPagePtr PagePtr1, PagePtr2;$/;"	v
PagePtr2	maadd.c	/^TaPagePtr PagePtr1, PagePtr2;$/;"	v
PageRef	maccess.h	/^    long long PageRef;$/;"	m	struct:TaSearchStep
PageRef	mainter.h	/^    long long PageRef;$/;"	m	struct:TaItem
PageRef	mainter.h	/^    long long PageRef;$/;"	m	struct:TaStackRec
PageSize	maccess.h	14;"	d
PageStackSize	maccess.h	15;"	d
PageTooSmall	madelete.c	/^Boolean PageTooSmall;$/;"	v
PassUp	maadd.c	/^Boolean PassUp; \/* variables  *\/$/;"	v
Path	maccess.h	/^    TaPath Path;$/;"	m	struct:IndexExt
PrScr	screen.c	/^PrScr ()$/;"	f
Prev	example.c	/^Prev ()$/;"	f
Prev	example1.c	/^Prev ()$/;"	f
PrevKey	maccess.c	/^PrevKey (IdxF, IdxE, DataRecNum, ProcKey)$/;"	f
ProcItem1	maadd.c	/^struct TaItem ProcItem1, ProcItem2;$/;"	v	typeref:struct:TaItem
ProcItem2	maadd.c	/^struct TaItem ProcItem1, ProcItem2;$/;"	v	typeref:struct:
ProcessGet	screen.c	/^ProcessGet (Wget, Row, Poc, PPtr)$/;"	f
ProcessLook	screen.c	/^ProcessLook (Wget, Row, Poc, PPtr)$/;"	f
PutFileHeader	maccess.c	/^PutFileHeader (DatF, DatE)$/;"	f
PutRec	maccess.c	/^PutRec (DatF, DatE, R, Buffer)$/;"	f
R	mainter.h	/^    char R[MaxDataRecSize]; \/* byte type *\/$/;"	m	union:TaRecordBuffer
RANLIB	Makefile	/^RANLIB= ranlib$/;"	m
RR	maccess.h	/^    long long RR;$/;"	m	struct:DataFile
R_auth_id_allowed	example2/example2.h	/^struct Record_auth_id_allowed R_auth_id_allowed;$/;"	v	typeref:struct:Record_auth_id_allowed
R_ip_address	example2/example2.h	/^struct Record_ip_address R_ip_address;$/;"	v	typeref:struct:Record_ip_address
R_origin	example2/example2.h	/^struct Record_origin R_origin;$/;"	v	typeref:struct:Record_origin
R_resource	example2/example2.h	/^struct Record_resource R_resource;$/;"	v	typeref:struct:Record_resource
RacunajHeight	calculate.c	/^RacunajHeight (PageSize, MaxRecs)$/;"	f
Read	screen.c	/^Read ()$/;"	f
ReadHeader	maccess.c	/^ReadHeader (DatF, DatE)$/;"	f
ReadPositionW	screen.c	/^long long ReadPositionW;$/;"	v
RebuildIndex	e1_rebuild.c	/^RebuildIndex ()$/;"	f
RebuildIndex	e_rebuild.c	/^RebuildIndex ()$/;"	f
RebuildIndex	example.c	/^RebuildIndex ()$/;"	f
RebuildIndex	example1.c	/^RebuildIndex ()$/;"	f
RebuildIndex	example2/e2_auth_id_allowed_rebuild.c	/^RebuildIndex ()$/;"	f
RebuildIndex	example2/e2_ip_address_rebuild.c	/^RebuildIndex ()$/;"	f
RebuildIndex	example2/e2_origin_rebuild.c	/^RebuildIndex ()$/;"	f
RebuildIndex	example2/e2_resource_rebuild.c	/^RebuildIndex ()$/;"	f
RecSizeMismatch	maccerr.h	8;"	d
RecTooLarge	maccerr.h	5;"	d
RecTooSmall	maccerr.h	6;"	d
Record	example.h	/^struct Record {$/;"	s
Record	example1.h	/^struct Record {$/;"	s
Record_auth_id_allowed	example2/example2.h	/^struct Record_auth_id_allowed {$/;"	s
Record_ip_address	example2/example2.h	/^struct Record_ip_address {$/;"	s
Record_origin	example2/example2.h	/^struct Record_origin {$/;"	s
Record_resource	example2/example2.h	/^struct Record_resource {$/;"	s
Remark	example.h	/^    char Remark[46];$/;"	m	struct:Record
RowLength	screen.c	/^  int RowLength;$/;"	m	struct:TakeField	file:
RowN	screen.c	/^  int RowN;$/;"	m	struct:TakeField	file:
RowUp	screen.c	/^  int RowUp;$/;"	m	struct:TakeField	file:
SHM_Lock	mashmlock.c	/^SHM_Lock (long long *shm_lock) \/* Shared memory lock *\/$/;"	f
SHM_UnLock	mashmlock.c	/^SHM_UnLock (long long *shm_lock) \/* Shared memory unlock *\/$/;"	f
SYSLIBS	Makefile	/^SYSLIBS = -lncurses -lm -luuid -lpthread$/;"	m
SYSLIBS	example2/Makefile	/^SYSLIBS = -lm -luuid $/;"	m
Search	maadd.c	/^Search (PrPgRef1, IdxF, IdxE, DataRecNum, ProcKey, RBr)$/;"	f
SearchKey	maccess.c	/^SearchKey (IdxF, IdxE, DataRecNum, ProcKey)$/;"	f
Searching	example.c	/^Searching ()$/;"	f
Searching	example1.c	/^Searching ()$/;"	f
ShowSymbols	scrshowsymbols.c	/^ShowSymbols ()$/;"	f
Size_DF	mamemory.c	12;"	d	file:
StartPositionW	screen.c	/^int StartPositionW, HowMuchW;$/;"	v
StartSM	mamemory.c	/^StartSM (MemoryCode)$/;"	f
StoreIndexHeader	maccess.c	/^StoreIndexHeader (IdxF, IdxE)$/;"	f
Surname	example.h	/^    char Surname[26];$/;"	m	struct:Record
SwIns	screen.c	/^SwIns ()$/;"	f
T	defs.h	/^    F, T$/;"	e	enum:Bool
TAIOCheck	maccess.c	/^TAIOCheck ()$/;"	f
TCAP	Makefile	/^TCAP = -DM_TERMINFO$/;"	m
TCAP	example2/Makefile	/^TCAP = -DM_TERMINFO$/;"	m
TaCompKeys	maccess.c	/^TaCompKeys (K1, K2, DR1, DR2, DUP)$/;"	f
TaFindKey	maccess.c	/^TaFindKey (IdxF, IdxE, DataRecNum, ProcKey)$/;"	f
TaGetPage	maccess.c	/^TaGetPage (IdxF, IdxE, R, PagPtr)$/;"	f
TaGetRec	maccess.c	/^TaGetRec (DatF, DatE, R, Buffer)$/;"	f
TaItem	mainter.h	/^struct TaItem {$/;"	s
TaKeyStr	maccess.h	/^typedef char TaKeyStr[MaxKeyLen];$/;"	t
TaLast	maccess.c	/^TaLast (i, MemNum)$/;"	f
TaNewPage	maccess.c	/^TaNewPage (IdxF, IdxE, R, PagPtr)$/;"	f
TaPack	maccess.c	/^TaPack (Page, KeyL) \/***** rv *****\/$/;"	f
TaPage	mainter.h	/^struct TaPage {$/;"	s
TaPageMap	mainter.h	/^typedef long long TaPageMap[PageStackSize];$/;"	t
TaPageMapPtr	mainter.h	/^typedef TaPageMap *TaPageMapPtr;$/;"	t
TaPagePtr	mainter.h	/^typedef struct TaPage *TaPagePtr;$/;"	t	typeref:struct:TaPage
TaPageStack	mainter.h	/^typedef struct TaStackRec TaPageStack[PageStackSize];$/;"	t	typeref:struct:TaStackRec
TaPageStackPtr	mainter.h	/^typedef TaPageStack *TaPageStackPtr;$/;"	t
TaPageStk	maccess.c	/^TaPageStack *TaPageStk[HasMemories];$/;"	v
TaPath	maccess.h	/^typedef struct TaSearchStep TaPath[MaxHeight];$/;"	t	typeref:struct:TaSearchStep
TaPgMap	maccess.c	/^TaPageMap *TaPgMap[HasMemories];$/;"	v
TaPutRec	maccess.c	/^TaPutRec (DatF, DatE, R, Buffer)$/;"	f
TaReadPage	maccess.c	/^TaReadPage (IdxF, IdxE, R, PagPtr)$/;"	f
TaRecBuf	maccess.c	/^union TaRecordBuffer *TaRecBuf;$/;"	v	typeref:union:TaRecordBuffer
TaRecNum	e1_load.c	/^long long TaRecNum = 0;$/;"	v
TaRecNum	e1_print.c	/^long long TaRecNum = 0;$/;"	v
TaRecNum	e1_rebuild.c	/^long long TaRecNum = 0;$/;"	v
TaRecNum	e_load.c	/^long long TaRecNum = 0;$/;"	v
TaRecNum	e_print.c	/^long long TaRecNum = 0;$/;"	v
TaRecNum	e_rebuild.c	/^long long TaRecNum = 0;$/;"	v
TaRecNum	example.c	/^long long TaRecNum = 0;$/;"	v
TaRecNum	example1.c	/^long long TaRecNum = 0;$/;"	v
TaRecNum	example2/example2.h	/^long long TaRecNum;$/;"	v
TaRecordBuffer	mainter.h	/^union TaRecordBuffer {$/;"	u
TaReturnPage	madelete.c	/^TaReturnPage (PagPtr)$/;"	f
TaSearchStep	maccess.h	/^struct TaSearchStep {$/;"	s
TaStackRec	mainter.h	/^struct TaStackRec {$/;"	s
TaStackRecPtr	mainter.h	/^typedef struct TaStackRec *TaStackRecPtr;$/;"	t	typeref:struct:TaStackRec
TaUnPack	maccess.c	/^TaUnPack (Page, KeyL)$/;"	f
TaUpdatePage	maccess.c	/^TaUpdatePage (PagePtr)$/;"	f
TaWriteRec	maccess.c	/^TaWriteRec (DatF, R, Buffer)$/;"	f
TakeField	screen.c	/^struct TakeField$/;"	s	file:
TakeSymbol	key.c	/^TakeSymbol ()$/;"	f
TakeSymbol	scrkey.c	/^TakeSymbol (WAIT)$/;"	f
TermAccess	mamemory.c	/^TermAccess (MemNum)$/;"	f
TermEkran	key.c	/^TermEkran ()$/;"	f
TermEkran	screen.c	/^TermEkran ()$/;"	f
Term_Change_Symbol	scrkey.c	/^Term_Change_Symbol (Symbol)$/;"	f
UNIX	conf_lib.h	13;"	d
USM	mamemory.c	/^USM (shmid, MemNum)$/;"	f
UnderFlow	madelete.c	/^UnderFlow (PrPgRef, PrPgRef2, r, IdxF, IdxE)$/;"	f
Update	example.c	/^Update ()$/;"	f
Update	example1.c	/^Update ()$/;"	f
Updated	mainter.h	/^    Boolean Updated;$/;"	m	struct:TaStackRec
UsedRecs	maccess.c	/^UsedRecs (DatF)$/;"	f
VARIABLE_IS_NOT_USED	conf_lib.h	35;"	d
VARIABLE_IS_NOT_USED	conf_lib.h	37;"	d
VelPolja	screen.c	/^  int VelPolja;$/;"	m	struct:TakeField	file:
Vertical_Line	scrdefs.h	58;"	d
Winf	screen.c	/^WINDOW *Winf;$/;"	v
Wkur	key.c	/^WINDOW *Wkur;$/;"	v
Wkur	screen.c	/^WINDOW *Wkur;$/;"	v
WriteHeader	mamake.c	/^WriteHeader (DatF, DatE, RecLen)$/;"	f
Wsav	screen.c	/^WINDOW *Wsav = NULL;$/;"	v
XIns	screen.c	/^int XIns;$/;"	v
YIns	screen.c	/^int YIns;$/;"	v
ZadevKey_pressed	screen.c	/^  int ZadevKey_pressed;$/;"	m	struct:TakeField	file:
Zorica	screen.c	/^Boolean Zorica;$/;"	v
_CONF_LIB_H_	conf_lib.h	4;"	d
_DEFS_H	defs.h	4;"	d
_EXAMPLE_1_H	example1.h	4;"	d
_EXAMPLE_2_H	example2/example2.h	4;"	d
_EXAMPLE_H	example.h	4;"	d
_H_LOG	log.h	4;"	d
_IMA_FLUSH	conf_lib.h	29;"	d
_MACCERR_H	maccerr.h	3;"	d
_MACCESS_H	maccess.h	6;"	d
_MAINTER_H	mainter.h	7;"	d
_M_TERMINFO	scrdefs.h	11;"	d
_M_TERMINFO	scrdefs.h	19;"	d
_NOT_FCGI	scrdefs.h	33;"	d
_SCRDEFS_H	scrdefs.h	7;"	d
_SCREEN_H	screen.h	9;"	d
allowed	example2/example2.h	/^    char allowed[2]; \/* char, not int, bacause it is indexed *\/$/;"	m	struct:Record_ip_address
allowed	example2/example2.h	/^    int allowed;$/;"	m	struct:Record_origin
allowed_Len	example2/e2_ip_address_load.c	/^unsigned long long allowed_Len = 2; \/* Should be key lenght + 1 *\/$/;"	v
allowed_Len	example2/e2_ip_address_print.c	/^unsigned long long allowed_Len = 2; \/* Should be key lenght + 1 *\/$/;"	v
allowed_Len	example2/e2_ip_address_rebuild.c	/^unsigned long long allowed_Len = 2; \/* Should be key lenght + 1 *\/$/;"	v
answer	screen.c	/^answer (Text)$/;"	f
auth_id	example1.h	/^    char auth_id[65];$/;"	m	struct:Record
auth_id	example2/example2.h	/^    char auth_id[65];$/;"	m	struct:Record_auth_id_allowed
auth_id_Len	e1_load.c	/^unsigned long long auth_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
auth_id_Len	e1_print.c	/^unsigned long long auth_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
auth_id_Len	e1_rebuild.c	/^unsigned long long auth_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
auth_id_Len	example1.c	/^unsigned long long auth_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
auth_id_allowed_auth_id_Len	example2/e2_auth_id_allowed_load.c	/^unsigned long long auth_id_allowed_auth_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
auth_id_allowed_auth_id_Len	example2/e2_auth_id_allowed_print.c	/^unsigned long long auth_id_allowed_auth_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
auth_id_allowed_auth_id_Len	example2/e2_auth_id_allowed_rebuild.c	/^unsigned long long auth_id_allowed_auth_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
auth_id_allowed_record_id_Len	example2/e2_auth_id_allowed_load.c	/^unsigned long long auth_id_allowed_record_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
auth_id_allowed_record_id_Len	example2/e2_auth_id_allowed_print.c	/^unsigned long long auth_id_allowed_record_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
auth_id_allowed_record_id_Len	example2/e2_auth_id_allowed_rebuild.c	/^unsigned long long auth_id_allowed_record_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
bash_script	example2/example2.h	/^    char bash_script[256];$/;"	m	struct:Record_resource
check	check.c	/^check (input)$/;"	f
check	check1.c	/^check (input)$/;"	f
check_character	scrcheck.c	/^check_character (field)$/;"	f
check_dot	scrcheck.c	/^check_dot (unos)$/;"	f
check_dot_empty	scrcheck.c	/^check_dot_empty (unos)$/;"	f
check_number	scrcheck.c	/^check_number (field)$/;"	f
check_number_empty	scrcheck.c	/^check_number_empty (field)$/;"	f
client_id	example1.h	/^    char client_id[65];$/;"	m	struct:Record
client_id_Len	e1_load.c	/^unsigned long long client_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
client_id_Len	e1_print.c	/^unsigned long long client_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
client_id_Len	e1_rebuild.c	/^unsigned long long client_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
client_id_Len	example1.c	/^unsigned long long client_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
closeLog	log.c	/^closeLog ()$/;"	f
datesecond	date.c	/^datesecond (char *InField)$/;"	f
datplus	date.c	/^datplus (char *InField, int dani)$/;"	f
datrazl	date.c	/^datrazl (char *InField1, char *InField2)$/;"	f
empty_str	e1_load.c	/^empty_str (char *str, int length) \/* Fille the string with ' ' *\/$/;"	f
empty_str	example1.c	/^empty_str (char *str, int length) \/* Fille the string with ' ' *\/$/;"	f
empty_str	example2/e2_auth_id_allowed_load.c	/^empty_str (char *str, int length) \/* Fille the string with ' ' *\/$/;"	f
empty_str	example2/e2_ip_address_load.c	/^empty_str (char *str, int length) \/* Fille the string with ' ' *\/$/;"	f
empty_str	example2/e2_origin_load.c	/^empty_str (char *str, int length) \/* Fille the string with ' ' *\/$/;"	f
empty_str	example2/e2_resource_load.c	/^empty_str (char *str, int length) \/* Fille the string with ' ' *\/$/;"	f
empty_string	string.c	/^empty_string (int Vel)$/;"	f
evKey_pressed	key.c	/^evKey_pressed ()$/;"	f
evKey_pressed	scrkey.c	/^evKey_pressed ()$/;"	f
free	conf_lib.h	11;"	d
group_id	example1.h	/^    char group_id[65];$/;"	m	struct:Record
group_id_Len	e1_load.c	/^unsigned long long group_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
group_id_Len	e1_print.c	/^unsigned long long group_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
group_id_Len	e1_rebuild.c	/^unsigned long long group_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
group_id_Len	example1.c	/^unsigned long long group_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
hex_string	e1_load.c	/^hex_string (char *str, int length)$/;"	f
hex_string	example1.c	/^hex_string (char *str, int length)$/;"	f
hex_string	example2/e2_auth_id_allowed_load.c	/^hex_string (char *str, int length)$/;"	f
hex_string	example2/e2_ip_address_load.c	/^hex_string (char *str, int length)$/;"	f
hex_string	example2/e2_origin_load.c	/^hex_string (char *str, int length)$/;"	f
hex_string	example2/e2_resource_load.c	/^hex_string (char *str, int length)$/;"	f
info	e1_load.c	/^struct Record *info = NULL;$/;"	v	typeref:struct:Record
info	e1_print.c	/^struct Record *info = NULL;$/;"	v	typeref:struct:Record
info	e1_rebuild.c	/^struct Record *info = NULL;$/;"	v	typeref:struct:Record
info	e_load.c	/^struct Record *info = NULL;$/;"	v	typeref:struct:Record
info	e_print.c	/^struct Record *info = NULL;$/;"	v	typeref:struct:Record
info	e_rebuild.c	/^struct Record *info = NULL;$/;"	v	typeref:struct:Record
info	example.c	/^struct Record *info = NULL;$/;"	v	typeref:struct:Record
info	example1.c	/^struct Record *info = NULL;$/;"	v	typeref:struct:Record
info	example2/e2_auth_id_allowed_load.c	/^struct Record_auth_id_allowed *info;$/;"	v	typeref:struct:Record_auth_id_allowed
info	example2/e2_auth_id_allowed_print.c	/^struct Record_auth_id_allowed *info;$/;"	v	typeref:struct:Record_auth_id_allowed
info	example2/e2_auth_id_allowed_rebuild.c	/^struct Record_auth_id_allowed *info;$/;"	v	typeref:struct:Record_auth_id_allowed
info	example2/e2_ip_address_load.c	/^struct Record_ip_address *info;$/;"	v	typeref:struct:Record_ip_address
info	example2/e2_ip_address_print.c	/^struct Record_ip_address *info;$/;"	v	typeref:struct:Record_ip_address
info	example2/e2_origin_load.c	/^struct Record_origin *info;$/;"	v	typeref:struct:Record_origin
info	example2/e2_origin_print.c	/^struct Record_origin *info;$/;"	v	typeref:struct:Record_origin
info	example2/e2_resource_load.c	/^struct Record_resource *info;$/;"	v	typeref:struct:Record_resource
info	example2/e2_resource_print.c	/^struct Record_resource *info;$/;"	v	typeref:struct:Record_resource
info	example2/e2_resource_rebuild.c	/^struct Record_resource *info;$/;"	v	typeref:struct:Record_resource
ip4_add	example2/example2.h	/^    char ip4_add[17];$/;"	m	struct:Record_ip_address
ip4_add_Len	example2/e2_ip_address_load.c	/^unsigned long long ip4_add_Len = 17; \/* Should be key lenght + 1 *\/$/;"	v
ip4_add_Len	example2/e2_ip_address_print.c	/^unsigned long long ip4_add_Len = 17; \/* Should be key lenght + 1 *\/$/;"	v
ip4_add_Len	example2/e2_ip_address_rebuild.c	/^unsigned long long ip4_add_Len = 17; \/* Should be key lenght + 1 *\/$/;"	v
isEmpty	string.c	/^isEmpty (char *InField)$/;"	f
k	madelete.c	/^long long k; \/* communication betwen DelB i DelA *\/$/;"	v
left	string.c	/^left (char *InField, int Vel)$/;"	f
left_str	e1_load.c	/^left_str (char *str, int lenght)$/;"	f
left_str	example1.c	/^left_str (char *str, int lenght)$/;"	f
left_str	example2/e2_auth_id_allowed_load.c	/^left_str (char *str, int lenght)$/;"	f
left_str	example2/e2_ip_address_load.c	/^left_str (char *str, int lenght)$/;"	f
left_str	example2/e2_origin_load.c	/^left_str (char *str, int lenght)$/;"	f
left_str	example2/e2_resource_load.c	/^left_str (char *str, int lenght)$/;"	f
logMessage	log.c	/^logMessage (char *s, ...)$/;"	f
logfp	log.c	/^static FILE * logfp = NULL;$/;"	v	file:
ltrim	string.c	/^ltrim (char *InField)$/;"	f
main	btree_parameters.c	/^main ()$/;"	f
main	calculate.c	/^main ()$/;"	f
main	e1_load.c	/^main ()$/;"	f
main	e1_print.c	/^main ()$/;"	f
main	e1_rebuild.c	/^main ()$/;"	f
main	e_load.c	/^main ()$/;"	f
main	e_print.c	/^main ()$/;"	f
main	e_rebuild.c	/^main ()$/;"	f
main	example.c	/^main ()$/;"	f
main	example1.c	/^main ()$/;"	f
main	example1_shmrm.c	/^main ()$/;"	f
main	example2/e2_auth_id_allowed_load.c	/^main ()$/;"	f
main	example2/e2_auth_id_allowed_print.c	/^main ()$/;"	f
main	example2/e2_auth_id_allowed_rebuild.c	/^main ()$/;"	f
main	example2/e2_ip_address_load.c	/^main ()$/;"	f
main	example2/e2_ip_address_print.c	/^main ()$/;"	f
main	example2/e2_ip_address_rebuild.c	/^main ()$/;"	f
main	example2/e2_origin_load.c	/^main ()$/;"	f
main	example2/e2_origin_print.c	/^main ()$/;"	f
main	example2/e2_origin_rebuild.c	/^main ()$/;"	f
main	example2/e2_resource_load.c	/^main ()$/;"	f
main	example2/e2_resource_print.c	/^main ()$/;"	f
main	example2/e2_resource_rebuild.c	/^main ()$/;"	f
main	example2/example2_shmrm.c	/^main ()$/;"	f
main	example_shmrm.c	/^main ()$/;"	f
main	key.c	/^main ()$/;"	f
malloc	conf_lib.h	9;"	d
max	defs.h	20;"	d
message	screen.c	/^message (char *Text)$/;"	f
min	defs.h	19;"	d
my_date	date.c	/^my_date ()$/;"	f
my_time	time.c	/^my_time ()$/;"	f
okrenidat	date.c	/^okrenidat (char *InField)$/;"	f
openLog	log.c	/^openLog (char *path)$/;"	f
origin_name	example2/example2.h	/^    char origin_name[65];$/;"	m	struct:Record_origin
origin_origin_name_Len	example2/e2_origin_load.c	/^unsigned long long origin_origin_name_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
origin_origin_name_Len	example2/e2_origin_print.c	/^unsigned long long origin_origin_name_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
origin_origin_name_Len	example2/e2_origin_rebuild.c	/^unsigned long long origin_origin_name_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
origin_record_id_Len	example2/e2_origin_load.c	/^unsigned long long origin_record_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
origin_record_id_Len	example2/e2_origin_print.c	/^unsigned long long origin_record_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
origin_record_id_Len	example2/e2_origin_rebuild.c	/^unsigned long long origin_record_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
ponovi	string.c	/^ponovi (char Symbol, int Vel)$/;"	f
prepare_str	e1_load.c	/^prepare_str (char *str, int length)$/;"	f
prepare_str	e_load.c	/^prepare_str (char *str, int length)$/;"	f
prepare_str	example1.c	/^prepare_str (char *str, int length)$/;"	f
prepare_str	example2/e2_auth_id_allowed_load.c	/^prepare_str (char *str, int length)$/;"	f
prepare_str	example2/e2_ip_address_load.c	/^prepare_str (char *str, int length)$/;"	f
prepare_str	example2/e2_origin_load.c	/^prepare_str (char *str, int length)$/;"	f
prepare_str	example2/e2_resource_load.c	/^prepare_str (char *str, int length)$/;"	f
prov0	calculate.c	/^prov0 (field)$/;"	f
prov1	calculate.c	/^prov1 (field)$/;"	f
prov2	calculate.c	/^prov2 (field)$/;"	f
prov3	calculate.c	/^prov3 (field)$/;"	f
prov4	calculate.c	/^prov4 (field)$/;"	f
pt	maccess.c	/^typedef PageBlock *pt; \/* types *\/$/;"	t	file:
realloc	conf_lib.h	10;"	d
record_id	example2/example2.h	/^    char record_id[65];$/;"	m	struct:Record_auth_id_allowed
record_id	example2/example2.h	/^    char record_id[65];$/;"	m	struct:Record_ip_address
record_id	example2/example2.h	/^    char record_id[65];$/;"	m	struct:Record_origin
record_id	example2/example2.h	/^    char record_id[65];$/;"	m	struct:Record_resource
record_id_Len	example2/e2_ip_address_load.c	/^unsigned long long record_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
record_id_Len	example2/e2_ip_address_print.c	/^unsigned long long record_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
record_id_Len	example2/e2_ip_address_rebuild.c	/^unsigned long long record_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
resource_id	example1.h	/^    char resource_id[65];$/;"	m	struct:Record
resource_id	example2/example2.h	/^    char resource_id[33];$/;"	m	struct:Record_resource
resource_id_Len	e1_load.c	/^unsigned long long resource_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
resource_id_Len	e1_print.c	/^unsigned long long resource_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
resource_id_Len	e1_rebuild.c	/^unsigned long long resource_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
resource_id_Len	example1.c	/^unsigned long long resource_id_Len = 65; \/* Should be key lenght + 1 *\/$/;"	v
resource_record_id_Len	example2/e2_resource_load.c	/^unsigned long long resource_record_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
resource_record_id_Len	example2/e2_resource_print.c	/^unsigned long long resource_record_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
resource_record_id_Len	example2/e2_resource_rebuild.c	/^unsigned long long resource_record_id_Len = 65; \/* Key lenght + 1 *\/$/;"	v
resource_resource_id_Len	example2/e2_resource_load.c	/^unsigned long long resource_resource_id_Len = 32; \/* Key lenght + 1 *\/$/;"	v
resource_resource_id_Len	example2/e2_resource_print.c	/^unsigned long long resource_resource_id_Len = 32; \/* Key lenght + 1 *\/$/;"	v
resource_resource_id_Len	example2/e2_resource_rebuild.c	/^unsigned long long resource_resource_id_Len = 32; \/* Key lenght + 1 *\/$/;"	v
rest_from_screen	screen.c	/^rest_from_screen (Wcuv)$/;"	f
restscreen	scrdefs.h	61;"	d
right	string.c	/^right (char *InField, int Vel)$/;"	f
save_on_screen	screen.c	/^save_on_screen ()$/;"	f
savescreen	scrdefs.h	60;"	d
scr_save	example.c	/^WINDOW *scr_save = NULL;$/;"	v
scr_save	example1.c	/^WINDOW *scr_save;$/;"	v
setgraf	scrdefs.h	65;"	d
setgraf	screen.c	/^setgraf ()$/;"	f
setlogfile	log.c	/^setlogfile (char* path)$/;"	f
settext	scrdefs.h	64;"	d
settext	screen.c	/^settext ()$/;"	f
sig_handler	e1_load.c	/^sig_handler (int sig)$/;"	f
sig_handler	e1_print.c	/^sig_handler (int sig)$/;"	f
sig_handler	e1_rebuild.c	/^sig_handler (int sig)$/;"	f
sig_handler	e_load.c	/^sig_handler (int sig)$/;"	f
sig_handler	e_print.c	/^sig_handler (int sig)$/;"	f
sig_handler	e_rebuild.c	/^sig_handler (int sig)$/;"	f
sig_handler	example.c	/^sig_handler (int sig)$/;"	f
sig_handler	example1.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_auth_id_allowed_load.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_auth_id_allowed_print.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_auth_id_allowed_rebuild.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_ip_address_load.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_ip_address_print.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_ip_address_rebuild.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_origin_load.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_origin_print.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_origin_rebuild.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_resource_load.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_resource_print.c	/^sig_handler (int sig)$/;"	f
sig_handler	example2/e2_resource_rebuild.c	/^sig_handler (int sig)$/;"	f
socket_id	example1.h	/^    char socket_id[48];$/;"	m	struct:Record
special_use	example2/example2.h	/^    char special_use[64];$/;"	m	struct:Record_resource
status	example1.h	/^    char status[3];$/;"	m	struct:Record
status_Len	e1_load.c	/^unsigned long long status_Len = 3; \/* Should be key lenght + 1 *\/$/;"	v
status_Len	e1_print.c	/^unsigned long long status_Len = 3; \/* Should be key lenght + 1 *\/$/;"	v
status_Len	e1_rebuild.c	/^unsigned long long status_Len = 3; \/* Should be key lenght + 1 *\/$/;"	v
status_Len	example1.c	/^unsigned long long status_Len = 3; \/* Should be key lenght + 1 *\/$/;"	v
time_and_date	time.c	/^time_and_date ()$/;"	f
time_difference	time.c	/^time_difference (char *InField1, char *InField2)$/;"	f
timesecond	time.c	/^timesecond (char *InField)$/;"	f
timestamp_h	example1.h	/^    char timestamp_h[11];$/;"	m	struct:Record
timestamp_l	example1.h	/^    char timestamp_l[11];$/;"	m	struct:Record
to_left	string.c	/^to_left (char *InField, int Vel)$/;"	f
to_right	string.c	/^to_right (char *InField, int Vel)$/;"	f
trim	string.c	/^trim (char *InField)$/;"	f
trim_str	e1_load.c	/^trim_str (char *str)$/;"	f
trim_str	example1.c	/^trim_str (char *str)$/;"	f
trim_str	example2/e2_auth_id_allowed_load.c	/^trim_str (char *str)$/;"	f
trim_str	example2/e2_ip_address_load.c	/^trim_str (char *str)$/;"	f
trim_str	example2/e2_origin_load.c	/^trim_str (char *str)$/;"	f
trim_str	example2/e2_resource_load.c	/^trim_str (char *str)$/;"	f
uuidt	e1_load.c	/^uuidt (char *uuid2)$/;"	f
uuidt	example1.c	/^uuidt (char *uuid2)$/;"	f
uuidt	example2/e2_auth_id_allowed_load.c	/^uuidt (char *uuid2)$/;"	f
uuidt	example2/e2_ip_address_load.c	/^uuidt (char *uuid2)$/;"	f
uuidt	example2/e2_origin_load.c	/^uuidt (char *uuid2)$/;"	f
uuidt	example2/e2_resource_load.c	/^uuidt (char *uuid2)$/;"	f
vrmuredi	time.c	/^vrmuredi (char *InField)$/;"	f
vsubstr	string.c	/^vsubstr (char *InField, int Poc, int Vel)$/;"	f
vtterm	screen.c	/^Boolean vtterm = F;$/;"	v
wCrtica	screen.c	/^wCrtica (MyWindow, wUp, wLeft)$/;"	f
wDelete_Screen	screen.c	/^wDelete_Screen (MyWindow, wUp, wLeft, wDown, wRight)$/;"	f
wFrame	scrframe.c	/^wFrame (MyWindow, wUp, wLeft, wDown, wRight)$/;"	f
wKutija	screen.c	/^wKutija (MyWindow, Rows, Sirina, Delete_Screen)$/;"	f
wLine	scrline.c	/^wLine (MyWindow, wUp, wLeft, wRight)$/;"	f
wVertical_Line	scrline.c	/^wVertical_Line (MyWindow, wUp, wLeft, wDown)$/;"	f
